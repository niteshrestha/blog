@{
        string Title = Model.WithoutSettings.String(BlogKeys.Title);
        string PageTitle = string.IsNullOrWhiteSpace(Title) ? Context.String(BlogKeys.Title) : Title + " - " + Context.String(BlogKeys.Title) ;
}

<!DOCTYPE html>
<html lang="en">
        <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=Edge"/>

        <title>@PageTitle</title>
        <meta name="description" content="@Context.String(BlogKeys.Description)" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0">

        @if (Context.String(BlogKeys.RssPath) != null) {
        <link type="application/rss+xml" rel="alternate" title="@Context.String(BlogKeys.Title)" href="@Context.GetLink(Context.String(BlogKeys.RssPath))" />
        }
        @if (Context.String(BlogKeys.AtomPath) != null) {
        <link type="application/atom+xml" rel="alternate" title="@Context.String(BlogKeys.Title)" href="@Context.GetLink(Context.String(BlogKeys.AtomPath))" />
        }
        <link rel="shortcut icon" href="@Context.GetLink("/favicon.ico")" type="image/x-icon">
        <link rel="icon" href="@Context.GetLink("/favicon.ico")" type="image/x-icon">

        <meta name="application-name" content="@Context.String(BlogKeys.Title)" />
        <meta name="msapplication-tooltip" content="@Context.String(BlogKeys.Title)" />
        <meta name="msapplication-starturl" content="@Context.GetLink("/")" />

        <meta property="og:title" content="@PageTitle" />
        @* <meta property="og:image" content="@Blog.Image" /> *@
        <meta property="og:type" content="website" />
        <meta property="og:url" content="@Context.GetLink(Model, true)" />

        @Html.Partial("_Head")

        </head>
        <body>
                <!-- Page Header -->

                @Html.Partial("_Header")

                <!-- Main Content -->
                <div data-commit-hovercards-enabled>
                        <main data-pjax-container>
                                <div>
                                        @RenderBody()
                                </div>
                        </main>
                </div>

                <!-- Footer -->
                <footer>
                        @Html.Partial("_Footer")
                </footer>

                <script src="@Context.GetLink("/assets/js/jquery.min.js")"></script>
                <script src="@Context.GetLink("/assets/js/bootstrap.min.js")"></script>
                <script src="@Context.GetLink("/assets/js/highlight.pack.js")"></script>
                <script src="@Context.GetLink("/assets/js/clean-blog.js")"></script>
                <script src="@Context.GetLink("/assets/js/d3.v3.min.js")"></script>
                <script src="@Context.GetLink("/assets/js/trianglify.min.js")"></script>
                <script src="@Context.GetLink("/assets/js/Please-compressed.js")"></script>
                <script src="@Context.GetLink("/assets/js/background-check.min.js")"></script>


                <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
                <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
                <!--[if lt IE 9]>
                        <script src="@Context.GetLink("/assets/js/html5shiv.js")"></script>
                        <script src="@Context.GetLink("/assets/js/respond.min.js")"></script>
                <![endif]-->

                @Html.Partial("_Scripts")
                <script>hljs.initHighlightingOnLoad();</script>

                @if(Model.String(BlogKeys.Image) == null)
                {
                        <script type="text/javascript">
                                // Header background
                                var colors = Please.make_color({
                                        colors_returned: 3,
                                        saturation: .6
                                });
                                var t = new Trianglify({
                                        x_gradient: colors,
                                        y_gradient: ["#FFFFFF"]
                                });
                                var header = document.getElementById("intro-header");
                                var pattern = t.generate(header.clientWidth, header.clientHeight);
                                header.setAttribute('style', 'background-image: ' + pattern.dataUrl);
                        </script>
                }

                <script>
                        BackgroundCheck.init({
                                targets: '.intro-header,.navbar',
                                images: '.intro-header'
                        });
                </script>
        </body>
</html>

